// Write your JavaScript code.
console.log("hello javascript code min.js");

//console.log("hello javascript code min.js");
/*
/* sign-in  
$("#signin-active").hide();
$("#signin-active").on("click", function(e) {
    console.log("hello submit button");
});

$("#sign-in-disabled").on("click", function(e) {
    console.log("hello disabled submit button");
    //$(".formtest #user-form span.name-req").show();
    //$(".formtest #user-form span.sem-req").show();
    // <span class="name-req"> Name is required my friend </span>
});
*/
/* -------------------------------- */

/* -------- Cart -------- */

function updateQuantityHtml (something, quantity) {
    // update the data-set -> .data("key". variable)
    $(something).parent().parent().prev().children(".user-item-quantity").data("quantity", quantity)
    // update the text on the screen 
    $(something).parent().parent().prev().children(".user-item-quantity").text("Quantity: " + quantity); //.html("Quantity: " + quantity-1));
}

// logged in user 
// removes one book from his cart
$(".user-cart-item-remove").on("click", function(e) {
    var quantity = $(this).parent().parent().prev().children(".user-item-quantity").data("quantity");
    var price = $(this).parent().parent().prev().children(".user-item-price").data("price");
    var bookId = $(this).data("useritemremove");
    console.log("Logged in user removing: " + bookId + " and price: " + price + " and quantity: " + quantity);
    
    var item = { 
        itemId: bookId, 
        quantity: quantity, 
        price: price,
        action: false // false is to remove one item from the database
    };

    // we send the action to the controller to remove one item
    sendActionToCartController(item);
    alert("One item of BookTitle has been removed from your cart ");
    // if quantity is going to be zero then we remove this row from the DOM
    if(quantity - 1 === 0 ) {
        //console.log("zero");
        $(this).parent().parent().parent().remove();
    } else {
        updateQuantityHtml(this, quantity-1);
    } 
});

// logged in user 
// adds one more book to his cart
$(".user-cart-item-add").on("click", function(e) {    
    var quantity = $(this).parent().parent().prev().children(".user-item-quantity").data("quantity");
    var price = $(this).parent().parent().prev().children(".user-item-price").data("price");
    var bookId = $(this).data("useritemadd");
    console.log("Logged in user adding: " + bookId + " and price: " + price + " and quantity: " + quantity);
    
    var item = { 
        itemId: bookId, 
        quantity: quantity, 
        price: price,
        action: true // true is add one more
    };
    
    sendActionToCartController(item);
    alert("One item of BookTitle has been added to your cart");
    updateQuantityHtml(this, quantity+1);
});

/*
function getAllFromLocalStorage() {

    return (allItemsInCart);
}

function appendAllCartItems(singleItem) {
    $(".grid-cart").append(
        "<div class=grid-cart-item>" +
            "<div class=grid-cart-item-title>" + singleItem.title + "</div>" +
            "<div class=grid-cart-item-price>" +
                "<div class=cart-quantity>" + "Quantity: " + singleItem.quantity + "</div>" +
                "<div>" + "Price for each: " + singleItem.price + "</div>" +
            "</div>" +
            "<div class=grid-cart-buttons>" +
                "<div>" + "<button " + addItemData + " class=\"cart-add btn btn-success\"> + </button>" + "</div>" +
                "<div>" + "<button " + removeItemData + " class=\"cart-remove btn btn-danger\"> - </button>" + "</div>" +
            "</div>" +
        "</div>");
}
*/

// not logged in user
// get all cart items
if ($("#cart").length > 0)  {
    console.log("found cart");
    var allItemsInCart = [];
    $("#cart-items").html("<h4> Your cart is empty </h4>");
    //$("#cart-table").hide();
    //$("#cart #cart-loader").toggleClass("loader");
    var addItemData = ""; //"data-add="+ result[j].itemId;
    var removeItemData = ""; //data-remove="+ result[j].itemId;
    var totalPrice = 0;
    for (var i = 0; i < localStorage.length; i++) {
        itemStoreId = localStorage.getItem(localStorage.key(i));
        key = localStorage.key(i);
        if(key.startsWith('itemId')) {
            if(itemStoreId !== 'INFO' && itemStoreId !== null && itemStoreId !== undefined) {
                singleItem = JSON.parse(itemStoreId);
                var item = { 
                    itemId: singleItem.itemId, 
                    quantity: singleItem.quantity, 
                    price: singleItem.price,
                    title: singleItem.title
                };
                totalPrice = totalPrice + singleItem.price * singleItem.quantity;
                allItemsInCart.push(item);
                addItemData = "data-add="+ singleItem.itemId;
                removeItemData = "data-remove="+ singleItem.itemId;
                $(".grid-cart").append(
                    "<div class=grid-cart-item>" +
                        "<div class=grid-cart-item-title>" + singleItem.title + "</div>" +
                        "<div class=grid-cart-item-price>" +
                            "<div class=cart-quantity>" + "Quantity: " + singleItem.quantity + "</div>" +
                            "<div>" + "Price for each: " + singleItem.price + "</div>" +
                        "</div>" +
                        "<div class=grid-cart-buttons>" +
                            "<div>" + "<button " + addItemData + " class=\"cart-add btn btn-success\"> + </button>" + "</div>" +
                            "<div>" + "<button " + removeItemData + " class=\"cart-remove btn btn-danger\"> - </button>" + "</div>" +
                        "</div>" +
                    "</div>");
            }
        }
    }
    setTotalPrice(totalPrice);


    console.log("all items in the cart");
    console.log(allItemsInCart);
    /*
    var dataType = 'application/json; charset=utf-8';

    $.ajax({
        type: 'POST',
        url: '/Cart',
        dataType: 'json',
        contentType: dataType,
        data: JSON.stringify(allItemsInCart),
        success: function(result) {
            $("#cart #cart-loader").toggleClass("loader");
            console.log('Data received: ');
            console.log(result);
            var totalPrice = 0;
            var addItemData = "";
            var removeItemData = "";
            var quantityItemData = "";
            for(var j = 0; j < result.length; j++) {
                totalPrice = totalPrice + result[j].price * result[j].quantity;
                addItemData = "data-add="+ result[j].itemId;
                removeItemData = "data-remove="+ result[j].itemId;
                /*
                $(".grid-cart").append(
                    "<div class=grid-cart-item>" +
                        "<div class=grid-cart-item-title>" + result[j].title + "</div>" +
                        "<div class=grid-cart-item-price>" +
                            "<div class=cart-quantity>" + "Quantity: " + result[j].quantity + "</div>" +
                            "<div>" + "Price for each: " + result[j].price + "</div>" +
                        "</div>" +
                        "<div class=grid-cart-buttons>" +
                            "<div>" + "<button " + addItemData + " class=\"cart-add btn btn-success\"> + </button>" + "</div>" +
                            "<div>" + "<button " + removeItemData + " class=\"cart-remove btn btn-danger\"> - </button>" + "</div>" +
                        "</div>" +
                    "</div>");
                
            }     
            
            setTotalPrice(totalPrice)
            //getTotalPrice(totalPrice);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            $("#cart #cart-loader").toggleClass("loader");
            $("#cart-items").html("<h4> Something went wrong. </h4>");
            console.log("Cart Post: Status: " + textStatus + " Error: " + errorThrown);
        } 
    });
    */
    $(".buy-books").on("click", function(e) {
        console.log("buy all books");
        $.ajax({
            type: 'POST',
            url: '/Cart/Buy',
            dataType: 'json',
            contentType: dataType,
            data: JSON.stringify(allItemsInCart),
            success: function(result) {
                console.log('Data received: ');
                console.log(result);
                if(result === false) {
                    window.location.href = "http://localhost:5000/Account/Login";
                } else {
                    window.location.href = "http://localhost:5000/Checkout";
                }  
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
                console.log("Cart Post: Status: " + textStatus + " Error: " + errorThrown);
            } 
        });
    });
}

// logged in user with empty cart, we check if he has anything in localStorage
if ($("#logged-in-empty-cart").length > 0)  {
    console.log("found logged in user with empty cart");
    
}
// we set the total price 
function setTotalPrice(totalPrice) {
    if(totalPrice === 0) {
        console.log("your cart is empty");
        //$("#cart-table").hide();
        $("#cart-items").html("<h4> Your cart is empty </h4>");
    } else {
        var totalData = "data-total=" + totalPrice;
        $("#cart-items").html("<h4> Total price " + "<span " + totalData + ">" + totalPrice + "</span> ISK</h4>");
    }
}

// we update the total price
function updateCartTotalPrice(price, actionAddOrRemove) {

    var totalPrice = $("#cart-items span").data("total");
    console.log("totalprice:" + totalPrice);
    // if true then we adding
    if(actionAddOrRemove === true) {
        totalPrice = totalPrice + price;
    } else {
        totalPrice = totalPrice - price;
    }
    setTotalPrice(totalPrice);
    //getTotalPrice(totalPrice);
}

// Controller/Cart/Index
// not logged in user
// add one item to the cart
$(".grid-cart").on('click', ".cart-add", function() {
    
    // put the localStorage key together
    var itemToGet = getLocalStorageKey(this, "add");
    console.log("/Cart/Index - not logged in - adding one more book to the cart/localStorage");

    // get the item and update it
    var item = localStorage.getItem(itemToGet);
    item = JSON.parse(item);
    item.quantity++;
    localStorage.setItem(itemToGet, JSON.stringify(item));

    // we update the quantity on the screen (DOM operation)
    $(this).parent().parent().prev().children(".cart-quantity").html("Quantity: " + item.quantity);
    // we update the totalPrice on the screen, true stands for add operation
    updateCartTotalPrice(item.price, true);
});


// we put localStorage key together using _this (the position in the DOM)
// and we use "action" can stand for add, remove, bookId
function getLocalStorageKey(_this, action) {
    var data = $(_this).data(action);
    return("itemId"+data);
}

// Controller/Cart/Index
// not logged in user
// remove one item from the cart
$(".grid-cart").on('click', ".cart-remove", function() {
    // put the localStorage key together
    var itemToGet = getLocalStorageKey(this, "remove");
    console.log("/Cart/Index - not logged in - removing item from the cart");
    // get the item and update it
    var item = localStorage.getItem(itemToGet);
    item = JSON.parse(item);
    item.quantity--;

    if(item.quantity === 0) {
        // we remove the item from the cart, the DOM and localStorage
        $(this).parent().parent().parent().remove();
        // remove the item from the localStorage 
        localStorage.removeItem(itemToGet); 
    } else {
        // find item in the DOM and update the quantity 
        $(this).parent().parent().prev().children(".cart-quantity").html("Quantity: " + item.quantity);
        // update localStorage
        localStorage.setItem(itemToGet, JSON.stringify(item));
    }
    updateCartTotalPrice(item.price, false);
});

/* -------------------------------- */
/* -------- Home/Index (frontpage) -------- */

// Controller/Home/Index
// logged in user 
// adds item to cart from the front page
// we send the info to the controller too update the table
function sendActionToCartController(item) {
    var dataType = 'application/json; charset=utf-8';

    if(!item && !item.itemId) {
        return;
    }
    else {
        $.ajax({
            type: 'POST',
            url: '/Cart/LoggedInUserCartAction',
            dataType: 'json',
            contentType: dataType,
            data: JSON.stringify(item),
            success: function(result) {
                console.log('Data received: ');
                console.log(result);
            },
            error: function(XMLHttpRequest, textStatus, errorThrown) {
                console.log("Cart/LoggedInUserCartAction Post: Status: " + textStatus + " Error: " + errorThrown);
            } 
        }); 
    } 
}

// Controller/Home/Index
// logged in user on the front-page
// adds one book to the cart from the front page
$(".add-user-book").on("click", function(e) {
    //console.log("hello user add button");
    var bookId = $(this).data("book");
    var price = $(this).data("price");
    console.log("Logged in user adding: " + bookId + " and price: " + price);
    var item = { 
        itemId: bookId, 
        quantity: 1, 
        price: price,
        action: true
    };  
    sendActionToCartController(item);
});

// Controller/Home/Index
// not logged in user 
// adding book from front-page 
$(".add-book").on("click", function(e) {
    // we get the localStorage key and then the item
    var storageKey = getLocalStorageKey(this, "book");
    var itemFromStorage = localStorage.getItem(storageKey);
    
    // if we get some item then the item exist, so we just increment quantity by 1
    if(itemFromStorage) {
        console.log("/Controller/Home/Index - Not logged in user - adding book to cart/localStorage");
        item = JSON.parse(itemFromStorage);
        item.quantity++;
        localStorage.setItem(storageKey, JSON.stringify(item));
    } else {
        // here we create new book to add to the localStorage
        console.log("/Controller/Home/Index - Not logged in user - adding new book to cart/localStorage");
        var bookId = $(this).data("book");
        var price = $(this).data("price");
        // get the title
        var title = $(this).prev().prev().prev().text();
        var bookToAdd = {};
        bookToAdd['itemId'] = bookId;
        bookToAdd['quantity'] = 1;
        bookToAdd['price'] = price;
        bookToAdd['title'] = title
        localStorage.setItem(storageKey, JSON.stringify(bookToAdd));
    }
});